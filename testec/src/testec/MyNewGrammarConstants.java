/* Generated By:JavaCC: Do not edit this line. MyNewGrammarConstants.java */
package testec;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface MyNewGrammarConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 7;
  /** RegularExpression Id. */
  int DECIMAL_LITERAL = 8;
  /** RegularExpression Id. */
  int FLOAT_LITERAL = 9;
  /** RegularExpression Id. */
  int CHARACTER_LITERAL = 10;
  /** RegularExpression Id. */
  int STRING_LITERAL = 11;
  /** RegularExpression Id. */
  int VOID = 12;
  /** RegularExpression Id. */
  int CHAR = 13;
  /** RegularExpression Id. */
  int INT = 14;
  /** RegularExpression Id. */
  int LONG = 15;
  /** RegularExpression Id. */
  int FLOAT = 16;
  /** RegularExpression Id. */
  int DOUBLE = 17;
  /** RegularExpression Id. */
  int CASE = 18;
  /** RegularExpression Id. */
  int IF = 19;
  /** RegularExpression Id. */
  int ELSE = 20;
  /** RegularExpression Id. */
  int SWITCH = 21;
  /** RegularExpression Id. */
  int WHILE = 22;
  /** RegularExpression Id. */
  int FOR = 23;
  /** RegularExpression Id. */
  int DO = 24;
  /** RegularExpression Id. */
  int CONTINUE = 25;
  /** RegularExpression Id. */
  int BREAK = 26;
  /** RegularExpression Id. */
  int RETURN = 27;
  /** RegularExpression Id. */
  int PRINT = 28;
  /** RegularExpression Id. */
  int SCAN = 29;
  /** RegularExpression Id. */
  int IDENTIFICADOR = 30;
  /** RegularExpression Id. */
  int LETRA = 31;
  /** RegularExpression Id. */
  int DIGITO = 32;
  /** RegularExpression Id. */
  int AC = 33;
  /** RegularExpression Id. */
  int FC = 34;
  /** RegularExpression Id. */
  int AP = 35;
  /** RegularExpression Id. */
  int FP = 36;
  /** RegularExpression Id. */
  int PV = 37;
  /** RegularExpression Id. */
  int P = 38;
  /** RegularExpression Id. */
  int ACO = 39;
  /** RegularExpression Id. */
  int FCO = 40;
  /** RegularExpression Id. */
  int VIRGULA = 41;
  /** RegularExpression Id. */
  int IGUAL = 42;
  /** RegularExpression Id. */
  int INCREMENTO = 43;
  /** RegularExpression Id. */
  int DECREMENTO = 44;
  /** RegularExpression Id. */
  int MAIORIGUAL = 45;
  /** RegularExpression Id. */
  int MENORIGUAL = 46;
  /** RegularExpression Id. */
  int MAIOR = 47;
  /** RegularExpression Id. */
  int MENOR = 48;
  /** RegularExpression Id. */
  int IGUALIGUAL = 49;
  /** RegularExpression Id. */
  int DIFERENTE = 50;
  /** RegularExpression Id. */
  int SOMA = 51;
  /** RegularExpression Id. */
  int SUBTRACAO = 52;
  /** RegularExpression Id. */
  int MULTIPLICACAO = 53;
  /** RegularExpression Id. */
  int DIVISAO = 54;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "<INTEGER_LITERAL>",
    "<DECIMAL_LITERAL>",
    "<FLOAT_LITERAL>",
    "<CHARACTER_LITERAL>",
    "<STRING_LITERAL>",
    "\"void\"",
    "\"char\"",
    "\"int\"",
    "\"long\"",
    "\"float\"",
    "\"double\"",
    "\"case\"",
    "\"if\"",
    "\"else\"",
    "\"switch\"",
    "\"while\"",
    "\"for\"",
    "\"do\"",
    "\"continue\"",
    "\"break\"",
    "\"return\"",
    "\"printf\"",
    "\"scanf\"",
    "<IDENTIFICADOR>",
    "<LETRA>",
    "<DIGITO>",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\";\"",
    "\".\"",
    "\"[\"",
    "\"]\"",
    "\",\"",
    "\"=\"",
    "\"++\"",
    "\"--\"",
    "\">=\"",
    "\"<=\"",
    "\">\"",
    "\"<\"",
    "\"==\"",
    "\"!=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"#include <stdio.h>\"",
    "\"&\"",
    "\"*=\"",
    "\"/=\"",
    "\"%=\"",
    "\"+=\"",
    "\"-=\"",
    "\"<<=\"",
    "\">>=\"",
    "\"&=\"",
    "\"^=\"",
    "\"|=\"",
    "\"~\"",
    "\"!\"",
    "\"||\"",
    "\"&&\"",
    "\"|\"",
    "\"^\"",
    "\"<<\"",
    "\">>\"",
    "\"%\"",
  };

}

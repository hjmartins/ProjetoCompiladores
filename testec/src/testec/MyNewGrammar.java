/* MyNewGrammar.java */
/* Generated By:JavaCC: Do not edit this line. MyNewGrammar.java */
package testec;
import java.util.*;
import java.io.*;
public class MyNewGrammar implements MyNewGrammarConstants {
    public static void main(String args []) throws ParseException, IOException, Exception
  {
    MyNewGrammar parser = new MyNewGrammar(new FileInputStream("exe4.txt"));
    try
    {
      MyNewGrammar.start();
    }
    catch (ParseException e)
    {
      System.out.println("Nao foi possivel compilar. " + e);
    }
  }

  static final public int start() throws ParseException, Exception {
    label_1:
    while (true) {
      Programa();
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case 55:{
        ;
        break;
        }
      default:
        jj_la1[0] = jj_gen;
        break label_1;
      }
    }
    jj_consume_token(0);
System.out.print("O codigo fornecido em C foi compilado. \n");
    {if ("" != null) return 0;}
    throw new Error("Missing return statement in function");
}

  static final public void Programa() throws ParseException, Exception {
    jj_consume_token(55);
    label_2:
    while (true) {
      DefinicaoFuncao();
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case INTEGER_LITERAL:
      case FLOAT_LITERAL:
      case CHARACTER_LITERAL:
      case STRING_LITERAL:
      case VOID:
      case CHAR:
      case INT:
      case FLOAT:
      case DOUBLE:
      case IF:
      case WHILE:
      case FOR:
      case CONTINUE:
      case BREAK:
      case RETURN:
      case PRINT:
      case SCAN:
      case IDENTIFICADOR:
      case AC:
      case AP:
      case PV:
      case INCREMENTO:
      case DECREMENTO:
      case SOMA:
      case SUBTRACAO:
      case MULTIPLICACAO:
      case DIVISAO:
      case 56:
      case 67:
      case 68:{
        ;
        break;
        }
      default:
        jj_la1[1] = jj_gen;
        break label_2;
      }
    }
}

  static final public void DefinicaoFuncao() throws ParseException, Exception {Token t = null;
    if (jj_2_1(2147483647)) {
      ListaDeclaracao();
    } else {
      ;
    }
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case INTEGER_LITERAL:
    case FLOAT_LITERAL:
    case CHARACTER_LITERAL:
    case STRING_LITERAL:
    case IF:
    case WHILE:
    case FOR:
    case CONTINUE:
    case BREAK:
    case RETURN:
    case PRINT:
    case SCAN:
    case IDENTIFICADOR:
    case AC:
    case AP:
    case PV:
    case INCREMENTO:
    case DECREMENTO:
    case SOMA:
    case SUBTRACAO:
    case MULTIPLICACAO:
    case DIVISAO:
    case 56:
    case 67:
    case 68:{
      ListaDeclaracoes();
      break;
      }
    default:
      jj_la1[2] = jj_gen;
      ;
    }

    EspecificadoresdeTipo();
    t = jj_consume_token(IDENTIFICADOR);

    jj_consume_token(AP);
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case VOID:
    case CHAR:
    case INT:
    case FLOAT:
    case DOUBLE:{
      ListaTiposParametros();
      break;
      }
    default:
      jj_la1[3] = jj_gen;
      ;
    }
    jj_consume_token(FP);

    CorpoFuncao();

}

  static final public void ListaTiposParametros() throws ParseException {
    ListadeParametros();

}

  static final public void ListadeParametros() throws ParseException {
    DeclaracaoParametro();
    label_3:
    while (true) {
      if (jj_2_2(2)) {
        ;
      } else {
        break label_3;
      }
      jj_consume_token(VIRGULA);
      DeclaracaoParametro();
    }

}

  static final public void DeclaracaoParametro() throws ParseException {
    EspecificadoresdeTipo();
    VariavelParam();

}

  static final public void CorpoFuncao() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case AC:{
      jj_consume_token(AC);
      if (jj_2_3(2147483647)) {
        ListaDeclaracao();
      } else {
        ;
      }
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case INTEGER_LITERAL:
      case FLOAT_LITERAL:
      case CHARACTER_LITERAL:
      case STRING_LITERAL:
      case IF:
      case WHILE:
      case FOR:
      case CONTINUE:
      case BREAK:
      case RETURN:
      case PRINT:
      case SCAN:
      case IDENTIFICADOR:
      case AC:
      case AP:
      case PV:
      case INCREMENTO:
      case DECREMENTO:
      case SOMA:
      case SUBTRACAO:
      case MULTIPLICACAO:
      case DIVISAO:
      case 56:
      case 67:
      case 68:{
        ListaDeclaracoes();
        break;
        }
      default:
        jj_la1[4] = jj_gen;
        ;
      }
      jj_consume_token(FC);
      break;
      }
    case PV:{
      jj_consume_token(PV);
      break;
      }
    default:
      jj_la1[5] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }

}

  static final public void ListaDeclaracoes() throws ParseException {
    label_4:
    while (true) {
      DeclaracaoTipo();
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case INTEGER_LITERAL:
      case FLOAT_LITERAL:
      case CHARACTER_LITERAL:
      case STRING_LITERAL:
      case IF:
      case WHILE:
      case FOR:
      case CONTINUE:
      case BREAK:
      case RETURN:
      case PRINT:
      case SCAN:
      case IDENTIFICADOR:
      case AC:
      case AP:
      case PV:
      case INCREMENTO:
      case DECREMENTO:
      case SOMA:
      case SUBTRACAO:
      case MULTIPLICACAO:
      case DIVISAO:
      case 56:
      case 67:
      case 68:{
        ;
        break;
        }
      default:
        jj_la1[6] = jj_gen;
        break label_4;
      }
    }

}

  static final public void DeclaracaoTipo() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case INTEGER_LITERAL:
    case FLOAT_LITERAL:
    case CHARACTER_LITERAL:
    case STRING_LITERAL:
    case PRINT:
    case SCAN:
    case IDENTIFICADOR:
    case AP:
    case PV:
    case INCREMENTO:
    case DECREMENTO:
    case SOMA:
    case SUBTRACAO:
    case MULTIPLICACAO:
    case DIVISAO:
    case 56:
    case 67:
    case 68:{
      DeclaracaoExpressao();
      break;
      }
    case AC:{
      CorpoFuncao();
      break;
      }
    case IF:{
      DeclaracaoCondicional();
      break;
      }
    case WHILE:
    case FOR:{
      DeclaracaoIteracao();
      break;
      }
    case CONTINUE:
    case BREAK:
    case RETURN:{
      DeclaracaoDesvio();
      break;
      }
    default:
      jj_la1[7] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }

}

  static final public void DeclaracaoCondicional() throws ParseException {
    jj_consume_token(IF);
    jj_consume_token(AP);
    Expressao();
    jj_consume_token(FP);

    DeclaracaoTipo();

    if (jj_2_4(2)) {
      jj_consume_token(ELSE);
      DeclaracaoTipo();
    } else {
      ;
    }


}

  static final public void DeclaracaoIteracao() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case WHILE:{
      jj_consume_token(WHILE);
      jj_consume_token(AP);
      Expressao();
      jj_consume_token(FP);

      DeclaracaoTipo();

      break;
      }
    case FOR:{
      jj_consume_token(FOR);
      jj_consume_token(AP);
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case INTEGER_LITERAL:
      case FLOAT_LITERAL:
      case CHARACTER_LITERAL:
      case STRING_LITERAL:
      case IDENTIFICADOR:
      case AP:
      case INCREMENTO:
      case DECREMENTO:
      case SOMA:
      case SUBTRACAO:
      case MULTIPLICACAO:
      case DIVISAO:
      case 56:
      case 67:
      case 68:{
        Expressao();
        break;
        }
      default:
        jj_la1[8] = jj_gen;
        ;
      }
      jj_consume_token(PV);

      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case INTEGER_LITERAL:
      case FLOAT_LITERAL:
      case CHARACTER_LITERAL:
      case STRING_LITERAL:
      case IDENTIFICADOR:
      case AP:
      case INCREMENTO:
      case DECREMENTO:
      case SOMA:
      case SUBTRACAO:
      case MULTIPLICACAO:
      case DIVISAO:
      case 56:
      case 67:
      case 68:{
        Expressao();
        break;
        }
      default:
        jj_la1[9] = jj_gen;
        ;
      }

      jj_consume_token(PV);

      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case INTEGER_LITERAL:
      case FLOAT_LITERAL:
      case CHARACTER_LITERAL:
      case STRING_LITERAL:
      case IDENTIFICADOR:
      case AP:
      case INCREMENTO:
      case DECREMENTO:
      case SOMA:
      case SUBTRACAO:
      case MULTIPLICACAO:
      case DIVISAO:
      case 56:
      case 67:
      case 68:{
        Expressao();
        break;
        }
      default:
        jj_la1[10] = jj_gen;
        ;
      }
      jj_consume_token(FP);

      DeclaracaoTipo();

      break;
      }
    default:
      jj_la1[11] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }

}

  static final public void DeclaracaoDesvio() throws ParseException {Token t = null;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case CONTINUE:{
      jj_consume_token(CONTINUE);
      jj_consume_token(PV);

      break;
      }
    case BREAK:{
      jj_consume_token(BREAK);
      jj_consume_token(PV);

      break;
      }
    case RETURN:{
      jj_consume_token(RETURN);
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case INTEGER_LITERAL:
      case FLOAT_LITERAL:
      case CHARACTER_LITERAL:
      case STRING_LITERAL:
      case IDENTIFICADOR:
      case AP:
      case INCREMENTO:
      case DECREMENTO:
      case SOMA:
      case SUBTRACAO:
      case MULTIPLICACAO:
      case DIVISAO:
      case 56:
      case 67:
      case 68:{
        Expressao();
        break;
        }
      default:
        jj_la1[12] = jj_gen;
        ;
      }
      jj_consume_token(PV);
      break;
      }
    default:
      jj_la1[13] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }

}

  static final public void ListaDeclaracao() throws ParseException {
    label_5:
    while (true) {
      EspecificadoresDeclaracao();
      if (jj_2_5(2)) {
        ;
      } else {
        break label_5;
      }
    }
}

  static final public void EspecificadoresDeclaracao() throws ParseException {
    DeclaracaoEspecificadores();
    ListaDeclaradoresInicializacao();
    jj_consume_token(PV);

}

  static final public void DeclaracaoEspecificadores() throws ParseException {
    EspecificadoresdeTipo();
    if (jj_2_6(2147483647)) {
      DeclaracaoEspecificadores();
    } else {
      ;
    }

}

  static final public void EspecificadoresdeTipo() throws ParseException {Token t = null;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case VOID:{
      t = jj_consume_token(VOID);
      break;
      }
    case CHAR:{
      t = jj_consume_token(CHAR);
      break;
      }
    case INT:{
      t = jj_consume_token(INT);
      break;
      }
    case FLOAT:{
      t = jj_consume_token(FLOAT);
      break;
      }
    case DOUBLE:{
      t = jj_consume_token(DOUBLE);
      break;
      }
    default:
      jj_la1[14] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }

}

  static final public void ListaDeclaradoresInicializacao() throws ParseException {
    DeclaradorInit();
    label_6:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case VIRGULA:{
        ;
        break;
        }
      default:
        jj_la1[15] = jj_gen;
        break label_6;
      }
      jj_consume_token(VIRGULA);
      DeclaradorInit();

    }
}

  static final public void DeclaradorInit() throws ParseException {Token t = null;
    VariavelParam();
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case IGUAL:{
      jj_consume_token(IGUAL);
      Inicializador();

      break;
      }
    default:
      jj_la1[16] = jj_gen;
      ;
    }

}

  static final public void VariavelParam() throws ParseException {
    DeclaracaoDireta();

}

  static final public void DeclaracaoDireta() throws ParseException {Token t = null;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case IDENTIFICADOR:{
      t = jj_consume_token(IDENTIFICADOR);
      break;
      }
    case AP:{
      jj_consume_token(AP);
      VariavelParam();
      jj_consume_token(FP);
      break;
      }
    default:
      jj_la1[17] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }

}

  static final public void ListaInicializadores() throws ParseException {
    Inicializador();
    label_7:
    while (true) {
      if (jj_2_7(2)) {
        ;
      } else {
        break label_7;
      }
      jj_consume_token(VIRGULA);
      Inicializador();
    }

}

  static final public void Inicializador() throws ParseException {
    ExpressaoAtribuicao();

}

  static final public void ExpressaoConstante() throws ParseException {
    ExpressaoCondicional();

}

  static final public void DeclaracaoExpressao() throws ParseException {Token t = null;
    if (jj_2_8(2)) {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case INTEGER_LITERAL:
      case FLOAT_LITERAL:
      case CHARACTER_LITERAL:
      case STRING_LITERAL:
      case IDENTIFICADOR:
      case AP:
      case INCREMENTO:
      case DECREMENTO:
      case SOMA:
      case SUBTRACAO:
      case MULTIPLICACAO:
      case DIVISAO:
      case 56:
      case 67:
      case 68:{
        Expressao();
        break;
        }
      default:
        jj_la1[18] = jj_gen;
        ;
      }
      jj_consume_token(PV);
    } else if (jj_2_9(2)) {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case PRINT:{
        jj_consume_token(PRINT);
        break;
        }
      default:
        jj_la1[19] = jj_gen;
        ;
      }
      jj_consume_token(AP);
      StringFormatada();
      jj_consume_token(FP);
      jj_consume_token(PV);
    } else if (jj_2_10(2)) {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case SCAN:{
        jj_consume_token(SCAN);
        break;
        }
      default:
        jj_la1[20] = jj_gen;
        ;
      }
      jj_consume_token(AP);
      jj_consume_token(STRING_LITERAL);
      jj_consume_token(VIRGULA);
      jj_consume_token(56);
      jj_consume_token(IDENTIFICADOR);
      jj_consume_token(FP);
      jj_consume_token(PV);
    } else if (jj_2_11(2)) {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case IDENTIFICADOR:{
        ChamadaFuncao();
        break;
        }
      default:
        jj_la1[21] = jj_gen;
        ;
      }
      jj_consume_token(PV);
    } else if (jj_2_12(2)) {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case IDENTIFICADOR:{
        jj_consume_token(IDENTIFICADOR);
        break;
        }
      default:
        jj_la1[22] = jj_gen;
        ;
      }
      jj_consume_token(AP);
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case INTEGER_LITERAL:
      case FLOAT_LITERAL:
      case CHARACTER_LITERAL:
      case STRING_LITERAL:
      case IDENTIFICADOR:
      case AP:
      case INCREMENTO:
      case DECREMENTO:
      case SOMA:
      case SUBTRACAO:
      case MULTIPLICACAO:
      case DIVISAO:
      case 56:
      case 67:
      case 68:{
        ListaArgumentos();
        break;
        }
      default:
        jj_la1[23] = jj_gen;
        ;
      }
      jj_consume_token(FP);
      jj_consume_token(PV);
    } else if (jj_2_13(2)) {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case IDENTIFICADOR:{
        jj_consume_token(IDENTIFICADOR);
        break;
        }
      default:
        jj_la1[24] = jj_gen;
        ;
      }
      jj_consume_token(AP);
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case INTEGER_LITERAL:
      case FLOAT_LITERAL:
      case CHARACTER_LITERAL:
      case STRING_LITERAL:
      case IDENTIFICADOR:
      case AP:
      case INCREMENTO:
      case DECREMENTO:
      case SOMA:
      case SUBTRACAO:
      case MULTIPLICACAO:
      case DIVISAO:
      case 56:
      case 67:
      case 68:{
        ListaArgumentos();
        break;
        }
      default:
        jj_la1[25] = jj_gen;
        ;
      }
      jj_consume_token(FP);
    } else if (jj_2_14(2)) {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case INTEGER_LITERAL:
      case FLOAT_LITERAL:
      case CHARACTER_LITERAL:
      case STRING_LITERAL:
      case IDENTIFICADOR:
      case AP:
      case INCREMENTO:
      case DECREMENTO:
      case SOMA:
      case SUBTRACAO:
      case MULTIPLICACAO:
      case DIVISAO:
      case 56:
      case 67:
      case 68:{
        Expressao();
        jj_consume_token(AP);
        switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
        case INTEGER_LITERAL:
        case FLOAT_LITERAL:
        case CHARACTER_LITERAL:
        case STRING_LITERAL:
        case IDENTIFICADOR:
        case AP:
        case INCREMENTO:
        case DECREMENTO:
        case SOMA:
        case SUBTRACAO:
        case MULTIPLICACAO:
        case DIVISAO:
        case 56:
        case 67:
        case 68:{
          ListaArgumentos();
          break;
          }
        default:
          jj_la1[26] = jj_gen;
          ;
        }
        jj_consume_token(FP);
        break;
        }
      default:
        jj_la1[27] = jj_gen;
        ;
      }
      jj_consume_token(PV);

    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }

}

  static final public void ChamadaFuncao() throws ParseException {Token t;
    t = jj_consume_token(IDENTIFICADOR);
    jj_consume_token(AP);
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case INTEGER_LITERAL:
    case FLOAT_LITERAL:
    case CHARACTER_LITERAL:
    case STRING_LITERAL:
    case IDENTIFICADOR:
    case AP:
    case INCREMENTO:
    case DECREMENTO:
    case SOMA:
    case SUBTRACAO:
    case MULTIPLICACAO:
    case DIVISAO:
    case 56:
    case 67:
    case 68:{
      ListaArgumentos();
      break;
      }
    default:
      jj_la1[28] = jj_gen;
      ;
    }
    jj_consume_token(FP);

}

  static final public void StringFormatada() throws ParseException {
    jj_consume_token(STRING_LITERAL);
    label_8:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case VIRGULA:{
        ;
        break;
        }
      default:
        jj_la1[29] = jj_gen;
        break label_8;
      }
      jj_consume_token(VIRGULA);
      Expressao();
    }

}

  static final public void ListaArgumentos() throws ParseException {
    Expressao();
    label_9:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case VIRGULA:{
        ;
        break;
        }
      default:
        jj_la1[30] = jj_gen;
        break label_9;
      }
      jj_consume_token(VIRGULA);
      Expressao();
    }

}

  static final public void Expressao() throws ParseException {
    ExpressaoAtribuicao();
    label_10:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case VIRGULA:{
        ;
        break;
        }
      default:
        jj_la1[31] = jj_gen;
        break label_10;
      }
      jj_consume_token(VIRGULA);
      ExpressaoAtribuicao();
    }

}

  static final public void ExpressaoAtribuicao() throws ParseException {
    if (jj_2_15(2147483647)) {
      ExpressaoUnaria();
      OperadorAtribuicao();

      ExpressaoAtribuicao();

    } else {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case INTEGER_LITERAL:
      case FLOAT_LITERAL:
      case CHARACTER_LITERAL:
      case STRING_LITERAL:
      case IDENTIFICADOR:
      case AP:
      case INCREMENTO:
      case DECREMENTO:
      case SOMA:
      case SUBTRACAO:
      case MULTIPLICACAO:
      case DIVISAO:
      case 56:
      case 67:
      case 68:{
        ExpressaoCondicional();
        break;
        }
      default:
        jj_la1[32] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }

}

  static final public void OperadorAtribuicao() throws ParseException {Token t = null;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case IGUAL:{
      t = jj_consume_token(IGUAL);
      break;
      }
    case 57:{
      t = jj_consume_token(57);
      break;
      }
    case 58:{
      t = jj_consume_token(58);
      break;
      }
    case 59:{
      t = jj_consume_token(59);
      break;
      }
    case 60:{
      t = jj_consume_token(60);
      break;
      }
    case 61:{
      t = jj_consume_token(61);
      break;
      }
    case 62:{
      t = jj_consume_token(62);
      break;
      }
    case 63:{
      t = jj_consume_token(63);
      break;
      }
    case 64:{
      t = jj_consume_token(64);
      break;
      }
    case 65:{
      t = jj_consume_token(65);
      break;
      }
    case 66:{
      t = jj_consume_token(66);
      break;
      }
    default:
      jj_la1[33] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }

}

  static final public void ExpressaoUnaria() throws ParseException {Token t = null;
    if (jj_2_16(3)) {
      ExpressaoIncreDecre();
    } else {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case INCREMENTO:{
        t = jj_consume_token(INCREMENTO);
        ExpressaoUnaria();
        break;
        }
      case DECREMENTO:{
        t = jj_consume_token(DECREMENTO);
        ExpressaoUnaria();
        break;
        }
      case SUBTRACAO:{
        t = jj_consume_token(SUBTRACAO);
        ExpressaoUnaria();
        break;
        }
      case SOMA:{
        t = jj_consume_token(SOMA);
        ExpressaoUnaria();
        break;
        }
      case DIVISAO:{
        t = jj_consume_token(DIVISAO);
        ExpressaoUnaria();
        break;
        }
      case 56:{
        t = jj_consume_token(56);
        ExpressaoUnaria();
        break;
        }
      case MULTIPLICACAO:{
        t = jj_consume_token(MULTIPLICACAO);
        ExpressaoUnaria();
        break;
        }
      case 67:{
        t = jj_consume_token(67);
        ExpressaoUnaria();
        break;
        }
      case 68:{
        t = jj_consume_token(68);
        ExpressaoUnaria();
        break;
        }
      default:
        jj_la1[34] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }

}

  static final public void ExpressaoIncreDecre() throws ParseException {Token t = null;
    ExpressaoPrimaria();
    label_11:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case ACO:
      case INCREMENTO:
      case DECREMENTO:{
        ;
        break;
        }
      default:
        jj_la1[35] = jj_gen;
        break label_11;
      }
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case ACO:{
        jj_consume_token(ACO);
        Expressao();
        jj_consume_token(FCO);
        break;
        }
      case INCREMENTO:{
        t = jj_consume_token(INCREMENTO);
        break;
        }
      case DECREMENTO:{
        t = jj_consume_token(DECREMENTO);
        break;
        }
      default:
        jj_la1[36] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }

}

  static final public void ExpressaoPrimaria() throws ParseException {Token t;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case IDENTIFICADOR:{
      t = jj_consume_token(IDENTIFICADOR);
      label_12:
      while (true) {
        switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
        case AP:{
          ;
          break;
          }
        default:
          jj_la1[37] = jj_gen;
          break label_12;
        }
        jj_consume_token(AP);
        Expressao();
        label_13:
        while (true) {
          switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
          case VIRGULA:{
            ;
            break;
            }
          default:
            jj_la1[38] = jj_gen;
            break label_13;
          }
          jj_consume_token(VIRGULA);
          Expressao();
        }
        jj_consume_token(FP);
      }
      break;
      }
    case INTEGER_LITERAL:
    case FLOAT_LITERAL:
    case CHARACTER_LITERAL:
    case STRING_LITERAL:{
      Constant();
      break;
      }
    case AP:{
      jj_consume_token(AP);
      Expressao();
      label_14:
      while (true) {
        switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
        case VIRGULA:{
          ;
          break;
          }
        default:
          jj_la1[39] = jj_gen;
          break label_14;
        }
        jj_consume_token(VIRGULA);
        Expressao();
      }
      jj_consume_token(FP);
      break;
      }
    default:
      jj_la1[40] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }

}

  static final public void ExpressaoCondicional() throws ParseException {
    OULogico();

}

  static final public void OULogico() throws ParseException {Token t = null;
    ELogico();
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case 69:{
      t = jj_consume_token(69);
      OULogico();

      break;
      }
    default:
      jj_la1[41] = jj_gen;
      ;
    }
}

  static final public void ELogico() throws ParseException {Token t = null;
    ORbits();
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case 70:{
      t = jj_consume_token(70);
      ELogico();

      break;
      }
    default:
      jj_la1[42] = jj_gen;
      ;
    }
}

  static final public void ORbits() throws ParseException {Token t = null;
    ORExclusivoBits();
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case 71:{
      t = jj_consume_token(71);
      ORbits();

      break;
      }
    default:
      jj_la1[43] = jj_gen;
      ;
    }
}

  static final public void ORExclusivoBits() throws ParseException {Token t = null;
    AndBits();
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case 72:{
      t = jj_consume_token(72);
      ORExclusivoBits();

      break;
      }
    default:
      jj_la1[44] = jj_gen;
      ;
    }
}

  static final public void AndBits() throws ParseException {Token t = null;
    ExpressaoIgualdade();
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case 56:{
      t = jj_consume_token(56);
      AndBits();

      break;
      }
    default:
      jj_la1[45] = jj_gen;
      ;
    }
}

  static final public void ExpressaoIgualdade() throws ParseException {Token t = null;
    ExpressaoRelacional();
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case IGUALIGUAL:
    case DIFERENTE:{
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case IGUALIGUAL:{
        t = jj_consume_token(IGUALIGUAL);
        break;
        }
      case DIFERENTE:{
        t = jj_consume_token(DIFERENTE);
        break;
        }
      default:
        jj_la1[46] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
      ExpressaoIgualdade();

      break;
      }
    default:
      jj_la1[47] = jj_gen;
      ;
    }
}

  static final public void ExpressaoRelacional() throws ParseException {Token t = null;
    DeslocamentoBits();
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case MAIORIGUAL:
    case MENORIGUAL:
    case MAIOR:
    case MENOR:{
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case MENOR:{
        t = jj_consume_token(MENOR);
        break;
        }
      case MAIOR:{
        t = jj_consume_token(MAIOR);
        break;
        }
      case MENORIGUAL:{
        t = jj_consume_token(MENORIGUAL);
        break;
        }
      case MAIORIGUAL:{
        t = jj_consume_token(MAIORIGUAL);
        break;
        }
      default:
        jj_la1[48] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
      ExpressaoRelacional();

      break;
      }
    default:
      jj_la1[49] = jj_gen;
      ;
    }
}

  static final public void DeslocamentoBits() throws ParseException {Token t = null;
    ExpressaoAditiva();
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case 73:
    case 74:{
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case 73:{
        t = jj_consume_token(73);
        break;
        }
      case 74:{
        t = jj_consume_token(74);
        break;
        }
      default:
        jj_la1[50] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
      DeslocamentoBits();

      break;
      }
    default:
      jj_la1[51] = jj_gen;
      ;
    }
}

  static final public void ExpressaoAditiva() throws ParseException {Token t = null;
    ExpressaoMultiplicativa();
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case SOMA:
    case SUBTRACAO:{
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case SOMA:{
        t = jj_consume_token(SOMA);
        break;
        }
      case SUBTRACAO:{
        t = jj_consume_token(SUBTRACAO);
        break;
        }
      default:
        jj_la1[52] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
      ExpressaoAditiva();

      break;
      }
    default:
      jj_la1[53] = jj_gen;
      ;
    }
}

  static final public void ExpressaoMultiplicativa() throws ParseException {Token t = null;
    ExpressaoUnaria();
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case MULTIPLICACAO:
    case DIVISAO:
    case 75:{
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case MULTIPLICACAO:{
        t = jj_consume_token(MULTIPLICACAO);
        break;
        }
      case DIVISAO:{
        t = jj_consume_token(DIVISAO);
        break;
        }
      case 75:{
        t = jj_consume_token(75);
        break;
        }
      default:
        jj_la1[54] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
      ExpressaoMultiplicativa();

      break;
      }
    default:
      jj_la1[55] = jj_gen;
      ;
    }
}

  static final public void Constant() throws ParseException {Token t = null;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case INTEGER_LITERAL:{
      t = jj_consume_token(INTEGER_LITERAL);
      break;
      }
    case FLOAT_LITERAL:{
      t = jj_consume_token(FLOAT_LITERAL);
      break;
      }
    case CHARACTER_LITERAL:{
      t = jj_consume_token(CHARACTER_LITERAL);
      break;
      }
    case STRING_LITERAL:{
      t = jj_consume_token(STRING_LITERAL);
      break;
      }
    default:
      jj_la1[56] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  static private boolean jj_2_1(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_1()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(0, xla); }
  }

  static private boolean jj_2_2(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_2()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(1, xla); }
  }

  static private boolean jj_2_3(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_3()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(2, xla); }
  }

  static private boolean jj_2_4(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_4()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(3, xla); }
  }

  static private boolean jj_2_5(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_5()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(4, xla); }
  }

  static private boolean jj_2_6(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_6()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(5, xla); }
  }

  static private boolean jj_2_7(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_7()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(6, xla); }
  }

  static private boolean jj_2_8(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_8()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(7, xla); }
  }

  static private boolean jj_2_9(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_9()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(8, xla); }
  }

  static private boolean jj_2_10(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_10()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(9, xla); }
  }

  static private boolean jj_2_11(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_11()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(10, xla); }
  }

  static private boolean jj_2_12(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_12()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(11, xla); }
  }

  static private boolean jj_2_13(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_13()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(12, xla); }
  }

  static private boolean jj_2_14(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_14()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(13, xla); }
  }

  static private boolean jj_2_15(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_15()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(14, xla); }
  }

  static private boolean jj_2_16(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_16()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(15, xla); }
  }

  static private boolean jj_3R_DeclaracaoExpressao_360_20_23()
 {
    if (jj_3R_ChamadaFuncao_379_3_41()) return true;
    return false;
  }

  static private boolean jj_3R_ExpressaoPrimaria_465_105_77()
 {
    if (jj_scan_token(VIRGULA)) return true;
    if (jj_3R_Expressao_403_3_40()) return true;
    return false;
  }

  static private boolean jj_3R_ExpressaoMultiplicativa_563_5_102()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(53)) {
    jj_scanpos = xsp;
    if (jj_scan_token(54)) {
    jj_scanpos = xsp;
    if (jj_scan_token(75)) return true;
    }
    }
    if (jj_3R_ExpressaoMultiplicativa_562_3_99()) return true;
    return false;
  }

  static private boolean jj_3R_ExpressaoMultiplicativa_562_3_99()
 {
    if (jj_3R_ExpressaoUnaria_437_3_27()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_ExpressaoMultiplicativa_563_5_102()) jj_scanpos = xsp;
    return false;
  }

  static private boolean jj_3R_CorpoFuncao_178_5_67()
 {
    if (jj_scan_token(AC)) return true;
    return false;
  }

  static private boolean jj_3R_DeclaracaoExpressao_354_20_21()
 {
    if (jj_3R_Expressao_403_3_40()) return true;
    return false;
  }

  static private boolean jj_3R_CorpoFuncao_178_3_55()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_CorpoFuncao_178_5_67()) {
    jj_scanpos = xsp;
    if (jj_scan_token(37)) return true;
    }
    return false;
  }

  static private boolean jj_3_14()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_DeclaracaoExpressao_366_20_26()) jj_scanpos = xsp;
    if (jj_scan_token(PV)) return true;
    return false;
  }

  static private boolean jj_3_13()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(30)) jj_scanpos = xsp;
    if (jj_scan_token(AP)) return true;
    xsp = jj_scanpos;
    if (jj_3R_DeclaracaoExpressao_364_46_25()) jj_scanpos = xsp;
    if (jj_scan_token(FP)) return true;
    return false;
  }

  static private boolean jj_3R_ExpressaoAditiva_554_5_101()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(51)) {
    jj_scanpos = xsp;
    if (jj_scan_token(52)) return true;
    }
    if (jj_3R_ExpressaoAditiva_553_3_97()) return true;
    return false;
  }

  static private boolean jj_3_12()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(30)) jj_scanpos = xsp;
    if (jj_scan_token(AP)) return true;
    xsp = jj_scanpos;
    if (jj_3R_DeclaracaoExpressao_362_46_24()) jj_scanpos = xsp;
    if (jj_scan_token(FP)) return true;
    return false;
  }

  static private boolean jj_3R_ExpressaoAditiva_553_3_97()
 {
    if (jj_3R_ExpressaoMultiplicativa_562_3_99()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_ExpressaoAditiva_554_5_101()) jj_scanpos = xsp;
    return false;
  }

  static private boolean jj_3_11()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_DeclaracaoExpressao_360_20_23()) jj_scanpos = xsp;
    if (jj_scan_token(PV)) return true;
    return false;
  }

  static private boolean jj_3R_DeclaracaoParametro_170_3_16()
 {
    if (jj_3R_EspecificadoresdeTipo_274_3_31()) return true;
    return false;
  }

  static private boolean jj_3_10()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(29)) jj_scanpos = xsp;
    if (jj_scan_token(AP)) return true;
    if (jj_scan_token(STRING_LITERAL)) return true;
    return false;
  }

  static private boolean jj_3R_ExpressaoPrimaria_465_88_65()
 {
    if (jj_scan_token(AP)) return true;
    if (jj_3R_Expressao_403_3_40()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_ExpressaoPrimaria_465_105_77()) { jj_scanpos = xsp; break; }
    }
    if (jj_scan_token(FP)) return true;
    return false;
  }

  static private boolean jj_3_9()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(28)) jj_scanpos = xsp;
    if (jj_scan_token(AP)) return true;
    if (jj_3R_StringFormatada_386_3_22()) return true;
    return false;
  }

  static private boolean jj_3R_DeslocamentoBits_545_5_100()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(73)) {
    jj_scanpos = xsp;
    if (jj_scan_token(74)) return true;
    }
    if (jj_3R_DeslocamentoBits_544_3_95()) return true;
    return false;
  }

  static private boolean jj_3_8()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_DeclaracaoExpressao_354_20_21()) jj_scanpos = xsp;
    if (jj_scan_token(PV)) return true;
    return false;
  }

  static private boolean jj_3_2()
 {
    if (jj_scan_token(VIRGULA)) return true;
    if (jj_3R_DeclaracaoParametro_170_3_16()) return true;
    return false;
  }

  static private boolean jj_3R_DeslocamentoBits_544_3_95()
 {
    if (jj_3R_ExpressaoAditiva_553_3_97()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_DeslocamentoBits_545_5_100()) jj_scanpos = xsp;
    return false;
  }

  static private boolean jj_3R_DeclaracaoExpressao_353_3_54()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_8()) {
    jj_scanpos = xsp;
    if (jj_3_9()) {
    jj_scanpos = xsp;
    if (jj_3_10()) {
    jj_scanpos = xsp;
    if (jj_3_11()) {
    jj_scanpos = xsp;
    if (jj_3_12()) {
    jj_scanpos = xsp;
    if (jj_3_13()) {
    jj_scanpos = xsp;
    if (jj_3_14()) return true;
    }
    }
    }
    }
    }
    }
    return false;
  }

  static private boolean jj_3R_ExpressaoRelacional_536_5_98()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(48)) {
    jj_scanpos = xsp;
    if (jj_scan_token(47)) {
    jj_scanpos = xsp;
    if (jj_scan_token(46)) {
    jj_scanpos = xsp;
    if (jj_scan_token(45)) return true;
    }
    }
    }
    if (jj_3R_ExpressaoRelacional_535_3_93()) return true;
    return false;
  }

  static private boolean jj_3_1()
 {
    if (jj_3R_ListaDeclaracao_250_3_15()) return true;
    return false;
  }

  static private boolean jj_3R_ExpressaoPrimaria_465_75_64()
 {
    if (jj_3R_Constant_571_3_76()) return true;
    return false;
  }

  static private boolean jj_3R_ExpressaoRelacional_535_3_93()
 {
    if (jj_3R_DeslocamentoBits_544_3_95()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_ExpressaoRelacional_536_5_98()) jj_scanpos = xsp;
    return false;
  }

  static private boolean jj_3R_DeclaracaoDireta_315_29_82()
 {
    if (jj_scan_token(AP)) return true;
    if (jj_3R_VariavelParam_305_3_73()) return true;
    if (jj_scan_token(FP)) return true;
    return false;
  }

  static private boolean jj_3R_ExpressaoIgualdade_527_5_96()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(49)) {
    jj_scanpos = xsp;
    if (jj_scan_token(50)) return true;
    }
    if (jj_3R_ExpressaoIgualdade_526_3_91()) return true;
    return false;
  }

  static private boolean jj_3R_ExpressaoIgualdade_526_3_91()
 {
    if (jj_3R_ExpressaoRelacional_535_3_93()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_ExpressaoIgualdade_527_5_96()) jj_scanpos = xsp;
    return false;
  }

  static private boolean jj_3R_Inicializador_335_3_20()
 {
    if (jj_3R_ExpressaoAtribuicao_412_3_39()) return true;
    return false;
  }

  static private boolean jj_3R_AndBits_518_5_94()
 {
    if (jj_scan_token(56)) return true;
    if (jj_3R_AndBits_517_3_89()) return true;
    return false;
  }

  static private boolean jj_3_7()
 {
    if (jj_scan_token(VIRGULA)) return true;
    if (jj_3R_Inicializador_335_3_20()) return true;
    return false;
  }

  static private boolean jj_3R_AndBits_517_3_89()
 {
    if (jj_3R_ExpressaoIgualdade_526_3_91()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_AndBits_518_5_94()) jj_scanpos = xsp;
    return false;
  }

  static private boolean jj_3R_ORExclusivoBits_509_5_92()
 {
    if (jj_scan_token(72)) return true;
    if (jj_3R_ORExclusivoBits_508_3_87()) return true;
    return false;
  }

  static private boolean jj_3R_ORExclusivoBits_508_3_87()
 {
    if (jj_3R_AndBits_517_3_89()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_ORExclusivoBits_509_5_92()) jj_scanpos = xsp;
    return false;
  }

  static private boolean jj_3R_ExpressaoPrimaria_465_46_86()
 {
    if (jj_scan_token(VIRGULA)) return true;
    if (jj_3R_Expressao_403_3_40()) return true;
    return false;
  }

  static private boolean jj_3R_DeclaracaoDireta_315_3_79()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(30)) {
    jj_scanpos = xsp;
    if (jj_3R_DeclaracaoDireta_315_29_82()) return true;
    }
    return false;
  }

  static private boolean jj_3R_ORbits_500_5_90()
 {
    if (jj_scan_token(71)) return true;
    if (jj_3R_ORbits_499_3_84()) return true;
    return false;
  }

  static private boolean jj_3R_ORbits_499_3_84()
 {
    if (jj_3R_ORExclusivoBits_508_3_87()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_ORbits_500_5_90()) jj_scanpos = xsp;
    return false;
  }

  static private boolean jj_3R_VariavelParam_305_3_73()
 {
    if (jj_3R_DeclaracaoDireta_315_3_79()) return true;
    return false;
  }

  static private boolean jj_3R_ELogico_491_5_88()
 {
    if (jj_scan_token(70)) return true;
    if (jj_3R_ELogico_490_3_83()) return true;
    return false;
  }

  static private boolean jj_3R_ExpressaoPrimaria_465_29_75()
 {
    if (jj_scan_token(AP)) return true;
    if (jj_3R_Expressao_403_3_40()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_ExpressaoPrimaria_465_46_86()) { jj_scanpos = xsp; break; }
    }
    if (jj_scan_token(FP)) return true;
    return false;
  }

  static private boolean jj_3R_ELogico_490_3_83()
 {
    if (jj_3R_ORbits_499_3_84()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_ELogico_491_5_88()) jj_scanpos = xsp;
    return false;
  }

  static private boolean jj_3R_DeclaradorInit_293_5_81()
 {
    if (jj_scan_token(IGUAL)) return true;
    if (jj_3R_Inicializador_335_3_20()) return true;
    return false;
  }

  static private boolean jj_3R_OULogico_482_5_85()
 {
    if (jj_scan_token(69)) return true;
    if (jj_3R_OULogico_481_3_80()) return true;
    return false;
  }

  static private boolean jj_3R_DeclaradorInit_291_3_59()
 {
    if (jj_3R_VariavelParam_305_3_73()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_DeclaradorInit_293_5_81()) jj_scanpos = xsp;
    return false;
  }

  static private boolean jj_3R_OULogico_481_3_80()
 {
    if (jj_3R_ELogico_490_3_83()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_OULogico_482_5_85()) jj_scanpos = xsp;
    return false;
  }

  static private boolean jj_3R_ExpressaoIncreDecre_456_27_66()
 {
    if (jj_scan_token(ACO)) return true;
    if (jj_3R_Expressao_403_3_40()) return true;
    if (jj_scan_token(FCO)) return true;
    return false;
  }

  static private boolean jj_3R_ExpressaoIncreDecre_456_27_53()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_ExpressaoIncreDecre_456_27_66()) {
    jj_scanpos = xsp;
    if (jj_scan_token(43)) {
    jj_scanpos = xsp;
    if (jj_scan_token(44)) return true;
    }
    }
    return false;
  }

  static private boolean jj_3R_ListaDeclaradoresInicializacao_283_5_78()
 {
    if (jj_scan_token(VIRGULA)) return true;
    if (jj_3R_DeclaradorInit_291_3_59()) return true;
    return false;
  }

  static private boolean jj_3R_DeclaracaoDesvio_242_46_72()
 {
    if (jj_scan_token(RETURN)) return true;
    return false;
  }

  static private boolean jj_3R_ExpressaoUnaria_445_33_51()
 {
    if (jj_scan_token(68)) return true;
    if (jj_3R_ExpressaoUnaria_437_3_27()) return true;
    return false;
  }

  static private boolean jj_3R_ExpressaoUnaria_444_33_49()
 {
    if (jj_scan_token(MULTIPLICACAO)) return true;
    if (jj_3R_ExpressaoUnaria_437_3_27()) return true;
    return false;
  }

  static private boolean jj_3R_ExpressaoCondicional_473_3_74()
 {
    if (jj_3R_OULogico_481_3_80()) return true;
    return false;
  }

  static private boolean jj_3R_ListaDeclaradoresInicializacao_282_3_37()
 {
    if (jj_3R_DeclaradorInit_291_3_59()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_ListaDeclaradoresInicializacao_283_5_78()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  static private boolean jj_3R_ExpressaoUnaria_442_34_45()
 {
    if (jj_scan_token(SUBTRACAO)) return true;
    if (jj_3R_ExpressaoUnaria_437_3_27()) return true;
    return false;
  }

  static private boolean jj_3R_ExpressaoUnaria_443_33_47()
 {
    if (jj_scan_token(DIVISAO)) return true;
    if (jj_3R_ExpressaoUnaria_437_3_27()) return true;
    return false;
  }

  static private boolean jj_3_6()
 {
    if (jj_3R_DeclaracaoEspecificadores_263_3_19()) return true;
    return false;
  }

  static private boolean jj_3R_ExpressaoPrimaria_465_5_63()
 {
    if (jj_scan_token(IDENTIFICADOR)) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_ExpressaoPrimaria_465_29_75()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  static private boolean jj_3R_EspecificadoresdeTipo_274_3_31()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(12)) {
    jj_scanpos = xsp;
    if (jj_scan_token(13)) {
    jj_scanpos = xsp;
    if (jj_scan_token(14)) {
    jj_scanpos = xsp;
    if (jj_scan_token(16)) {
    jj_scanpos = xsp;
    if (jj_scan_token(17)) return true;
    }
    }
    }
    }
    return false;
  }

  static private boolean jj_3R_ExpressaoPrimaria_465_3_52()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_ExpressaoPrimaria_465_5_63()) {
    jj_scanpos = xsp;
    if (jj_3R_ExpressaoPrimaria_465_75_64()) {
    jj_scanpos = xsp;
    if (jj_3R_ExpressaoPrimaria_465_88_65()) return true;
    }
    }
    return false;
  }

  static private boolean jj_3R_DeclaracaoEspecificadores_264_6_38()
 {
    if (jj_3R_DeclaracaoEspecificadores_263_3_19()) return true;
    return false;
  }

  static private boolean jj_3R_DeclaracaoDesvio_242_27_71()
 {
    if (jj_scan_token(BREAK)) return true;
    return false;
  }

  static private boolean jj_3_5()
 {
    if (jj_3R_EspecificadoresDeclaracao_255_3_18()) return true;
    return false;
  }

  static private boolean jj_3R_ExpressaoIncreDecre_456_3_29()
 {
    if (jj_3R_ExpressaoPrimaria_465_3_52()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_ExpressaoIncreDecre_456_27_53()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  static private boolean jj_3R_DeclaracaoEspecificadores_263_3_19()
 {
    if (jj_3R_EspecificadoresdeTipo_274_3_31()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_DeclaracaoEspecificadores_264_6_38()) jj_scanpos = xsp;
    return false;
  }

  static private boolean jj_3R_ExpressaoUnaria_445_5_50()
 {
    if (jj_scan_token(67)) return true;
    if (jj_3R_ExpressaoUnaria_437_3_27()) return true;
    return false;
  }

  static private boolean jj_3R_EspecificadoresDeclaracao_255_3_18()
 {
    if (jj_3R_DeclaracaoEspecificadores_263_3_19()) return true;
    if (jj_3R_ListaDeclaradoresInicializacao_282_3_37()) return true;
    if (jj_scan_token(PV)) return true;
    return false;
  }

  static private boolean jj_3R_ExpressaoUnaria_444_5_48()
 {
    if (jj_scan_token(56)) return true;
    if (jj_3R_ExpressaoUnaria_437_3_27()) return true;
    return false;
  }

  static private boolean jj_3R_ExpressaoUnaria_443_5_46()
 {
    if (jj_scan_token(SOMA)) return true;
    if (jj_3R_ExpressaoUnaria_437_3_27()) return true;
    return false;
  }

  static private boolean jj_3R_ExpressaoUnaria_442_5_44()
 {
    if (jj_scan_token(DECREMENTO)) return true;
    if (jj_3R_ExpressaoUnaria_437_3_27()) return true;
    return false;
  }

  static private boolean jj_3R_ListaDeclaracao_250_5_30()
 {
    if (jj_3R_EspecificadoresDeclaracao_255_3_18()) return true;
    return false;
  }

  static private boolean jj_3R_ExpressaoUnaria_440_5_43()
 {
    if (jj_scan_token(INCREMENTO)) return true;
    if (jj_3R_ExpressaoUnaria_437_3_27()) return true;
    return false;
  }

  static private boolean jj_3R_ListaDeclaracao_250_3_15()
 {
    Token xsp;
    if (jj_3R_ListaDeclaracao_250_5_30()) return true;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_ListaDeclaracao_250_5_30()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  static private boolean jj_3_16()
 {
    if (jj_3R_ExpressaoIncreDecre_456_3_29()) return true;
    return false;
  }

  static private boolean jj_3R_DeclaracaoTipo_196_54_36()
 {
    if (jj_3R_DeclaracaoDesvio_242_3_58()) return true;
    return false;
  }

  static private boolean jj_3R_ExpressaoUnaria_437_3_27()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_16()) {
    jj_scanpos = xsp;
    if (jj_3R_ExpressaoUnaria_440_5_43()) {
    jj_scanpos = xsp;
    if (jj_3R_ExpressaoUnaria_442_5_44()) {
    jj_scanpos = xsp;
    if (jj_3R_ExpressaoUnaria_442_34_45()) {
    jj_scanpos = xsp;
    if (jj_3R_ExpressaoUnaria_443_5_46()) {
    jj_scanpos = xsp;
    if (jj_3R_ExpressaoUnaria_443_33_47()) {
    jj_scanpos = xsp;
    if (jj_3R_ExpressaoUnaria_444_5_48()) {
    jj_scanpos = xsp;
    if (jj_3R_ExpressaoUnaria_444_33_49()) {
    jj_scanpos = xsp;
    if (jj_3R_ExpressaoUnaria_445_5_50()) {
    jj_scanpos = xsp;
    if (jj_3R_ExpressaoUnaria_445_33_51()) return true;
    }
    }
    }
    }
    }
    }
    }
    }
    }
    return false;
  }

  static private boolean jj_3R_DeclaracaoDesvio_242_5_70()
 {
    if (jj_scan_token(CONTINUE)) return true;
    return false;
  }

  static private boolean jj_3R_DeclaracaoDesvio_242_3_58()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_DeclaracaoDesvio_242_5_70()) {
    jj_scanpos = xsp;
    if (jj_3R_DeclaracaoDesvio_242_27_71()) {
    jj_scanpos = xsp;
    if (jj_3R_DeclaracaoDesvio_242_46_72()) return true;
    }
    }
    return false;
  }

  static private boolean jj_3R_Expressao_403_27_62()
 {
    if (jj_scan_token(VIRGULA)) return true;
    if (jj_3R_ExpressaoAtribuicao_412_3_39()) return true;
    return false;
  }

  static private boolean jj_3R_DeclaracaoIteracao_231_7_69()
 {
    if (jj_scan_token(FOR)) return true;
    return false;
  }

  static private boolean jj_3R_OperadorAtribuicao_426_3_28()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(42)) {
    jj_scanpos = xsp;
    if (jj_scan_token(57)) {
    jj_scanpos = xsp;
    if (jj_scan_token(58)) {
    jj_scanpos = xsp;
    if (jj_scan_token(59)) {
    jj_scanpos = xsp;
    if (jj_scan_token(60)) {
    jj_scanpos = xsp;
    if (jj_scan_token(61)) {
    jj_scanpos = xsp;
    if (jj_scan_token(62)) {
    jj_scanpos = xsp;
    if (jj_scan_token(63)) {
    jj_scanpos = xsp;
    if (jj_scan_token(64)) {
    jj_scanpos = xsp;
    if (jj_scan_token(65)) {
    jj_scanpos = xsp;
    if (jj_scan_token(66)) return true;
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    return false;
  }

  static private boolean jj_3_15()
 {
    if (jj_3R_ExpressaoUnaria_437_3_27()) return true;
    if (jj_3R_OperadorAtribuicao_426_3_28()) return true;
    return false;
  }

  static private boolean jj_3R_DeclaracaoIteracao_230_5_68()
 {
    if (jj_scan_token(WHILE)) return true;
    return false;
  }

  static private boolean jj_3R_DeclaracaoIteracao_229_3_57()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_DeclaracaoIteracao_230_5_68()) {
    jj_scanpos = xsp;
    if (jj_3R_DeclaracaoIteracao_231_7_69()) return true;
    }
    return false;
  }

  static private boolean jj_3R_ExpressaoAtribuicao_416_6_61()
 {
    if (jj_3R_ExpressaoCondicional_473_3_74()) return true;
    return false;
  }

  static private boolean jj_3R_DeclaracaoTipo_196_31_35()
 {
    if (jj_3R_DeclaracaoIteracao_229_3_57()) return true;
    return false;
  }

  static private boolean jj_3R_ExpressaoAtribuicao_412_5_60()
 {
    if (jj_3R_ExpressaoUnaria_437_3_27()) return true;
    if (jj_3R_OperadorAtribuicao_426_3_28()) return true;
    if (jj_3R_ExpressaoAtribuicao_412_3_39()) return true;
    return false;
  }

  static private boolean jj_3R_DeclaracaoTipo_195_29_33()
 {
    if (jj_3R_CorpoFuncao_178_3_55()) return true;
    return false;
  }

  static private boolean jj_3R_ExpressaoAtribuicao_412_3_39()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_ExpressaoAtribuicao_412_5_60()) {
    jj_scanpos = xsp;
    if (jj_3R_ExpressaoAtribuicao_416_6_61()) return true;
    }
    return false;
  }

  static private boolean jj_3_4()
 {
    if (jj_scan_token(ELSE)) return true;
    if (jj_3R_DeclaracaoTipo_195_3_17()) return true;
    return false;
  }

  static private boolean jj_3R_DeclaracaoExpressao_364_46_25()
 {
    if (jj_3R_ListaArgumentos_394_3_42()) return true;
    return false;
  }

  static private boolean jj_3R_DeclaracaoExpressao_362_46_24()
 {
    if (jj_3R_ListaArgumentos_394_3_42()) return true;
    return false;
  }

  static private boolean jj_3R_Expressao_403_3_40()
 {
    if (jj_3R_ExpressaoAtribuicao_412_3_39()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_Expressao_403_27_62()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  static private boolean jj_3R_DeclaracaoCondicional_206_3_56()
 {
    if (jj_scan_token(IF)) return true;
    return false;
  }

  static private boolean jj_3R_ListaArgumentos_394_3_42()
 {
    if (jj_3R_Expressao_403_3_40()) return true;
    return false;
  }

  static private boolean jj_3R_DeclaracaoTipo_196_5_34()
 {
    if (jj_3R_DeclaracaoCondicional_206_3_56()) return true;
    return false;
  }

  static private boolean jj_3R_DeclaracaoTipo_195_5_32()
 {
    if (jj_3R_DeclaracaoExpressao_353_3_54()) return true;
    return false;
  }

  static private boolean jj_3_3()
 {
    if (jj_3R_ListaDeclaracao_250_3_15()) return true;
    return false;
  }

  static private boolean jj_3R_DeclaracaoTipo_195_3_17()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_DeclaracaoTipo_195_5_32()) {
    jj_scanpos = xsp;
    if (jj_3R_DeclaracaoTipo_195_29_33()) {
    jj_scanpos = xsp;
    if (jj_3R_DeclaracaoTipo_196_5_34()) {
    jj_scanpos = xsp;
    if (jj_3R_DeclaracaoTipo_196_31_35()) {
    jj_scanpos = xsp;
    if (jj_3R_DeclaracaoTipo_196_54_36()) return true;
    }
    }
    }
    }
    return false;
  }

  static private boolean jj_3R_StringFormatada_386_3_22()
 {
    if (jj_scan_token(STRING_LITERAL)) return true;
    return false;
  }

  static private boolean jj_3R_DeclaracaoExpressao_366_20_26()
 {
    if (jj_3R_Expressao_403_3_40()) return true;
    if (jj_scan_token(AP)) return true;
    return false;
  }

  static private boolean jj_3R_Constant_571_3_76()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(7)) {
    jj_scanpos = xsp;
    if (jj_scan_token(9)) {
    jj_scanpos = xsp;
    if (jj_scan_token(10)) {
    jj_scanpos = xsp;
    if (jj_scan_token(11)) return true;
    }
    }
    }
    return false;
  }

  static private boolean jj_3R_ChamadaFuncao_379_3_41()
 {
    if (jj_scan_token(IDENTIFICADOR)) return true;
    if (jj_scan_token(AP)) return true;
    return false;
  }

  static private boolean jj_initialized_once = false;
  /** Generated Token Manager. */
  static public MyNewGrammarTokenManager token_source;
  static SimpleCharStream jj_input_stream;
  /** Current token. */
  static public Token token;
  /** Next token. */
  static public Token jj_nt;
  static private int jj_ntk;
  static private Token jj_scanpos, jj_lastpos;
  static private int jj_la;
  static private int jj_gen;
  static final private int[] jj_la1 = new int[57];
  static private int[] jj_la1_0;
  static private int[] jj_la1_1;
  static private int[] jj_la1_2;
  static {
	   jj_la1_init_0();
	   jj_la1_init_1();
	   jj_la1_init_2();
	}
	private static void jj_la1_init_0() {
	   jj_la1_0 = new int[] {0x0,0x7ecb7e80,0x7ec80e80,0x37000,0x7ec80e80,0x0,0x7ec80e80,0x7ec80e80,0x40000e80,0x40000e80,0x40000e80,0xc00000,0x40000e80,0xe000000,0x37000,0x0,0x0,0x40000000,0x40000e80,0x10000000,0x20000000,0x40000000,0x40000000,0x40000e80,0x40000000,0x40000e80,0x40000e80,0x40000e80,0x40000e80,0x0,0x0,0x0,0x40000e80,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x40000e80,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xe80,};
	}
	private static void jj_la1_init_1() {
	   jj_la1_1 = new int[] {0x800000,0x178182a,0x178182a,0x0,0x178182a,0x22,0x178182a,0x178182a,0x1781808,0x1781808,0x1781808,0x0,0x1781808,0x0,0x0,0x200,0x400,0x8,0x1781808,0x0,0x0,0x0,0x0,0x1781808,0x0,0x1781808,0x1781808,0x1781808,0x1781808,0x200,0x200,0x200,0x1781808,0xfe000400,0x1781800,0x1880,0x1880,0x8,0x200,0x200,0x8,0x0,0x0,0x0,0x0,0x1000000,0x60000,0x60000,0x1e000,0x1e000,0x0,0x0,0x180000,0x180000,0x600000,0x600000,0x0,};
	}
	private static void jj_la1_init_2() {
	   jj_la1_2 = new int[] {0x0,0x18,0x18,0x0,0x18,0x0,0x18,0x18,0x18,0x18,0x18,0x0,0x18,0x0,0x0,0x0,0x0,0x0,0x18,0x0,0x0,0x0,0x0,0x18,0x0,0x18,0x18,0x18,0x18,0x0,0x0,0x0,0x18,0x7,0x18,0x0,0x0,0x0,0x0,0x0,0x0,0x20,0x40,0x80,0x100,0x0,0x0,0x0,0x0,0x0,0x600,0x600,0x0,0x0,0x800,0x800,0x0,};
	}
  static final private JJCalls[] jj_2_rtns = new JJCalls[16];
  static private boolean jj_rescan = false;
  static private int jj_gc = 0;

  /** Constructor with InputStream. */
  public MyNewGrammar(java.io.InputStream stream) {
	  this(stream, null);
  }
  /** Constructor with InputStream and supplied encoding */
  public MyNewGrammar(java.io.InputStream stream, String encoding) {
	 if (jj_initialized_once) {
	   System.out.println("ERROR: Second call to constructor of static parser.  ");
	   System.out.println("	   You must either use ReInit() or set the JavaCC option STATIC to false");
	   System.out.println("	   during parser generation.");
	   throw new Error();
	 }
	 jj_initialized_once = true;
	 try { jj_input_stream = new SimpleCharStream(stream, encoding, 1, 1); } catch(java.io.UnsupportedEncodingException e) { throw new RuntimeException(e); }
	 token_source = new MyNewGrammarTokenManager(jj_input_stream);
	 token = new Token();
	 jj_ntk = -1;
	 jj_gen = 0;
	 for (int i = 0; i < 57; i++) jj_la1[i] = -1;
	 for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Reinitialise. */
  static public void ReInit(java.io.InputStream stream) {
	  ReInit(stream, null);
  }
  /** Reinitialise. */
  static public void ReInit(java.io.InputStream stream, String encoding) {
	 try { jj_input_stream.ReInit(stream, encoding, 1, 1); } catch(java.io.UnsupportedEncodingException e) { throw new RuntimeException(e); }
	 token_source.ReInit(jj_input_stream);
	 token = new Token();
	 jj_ntk = -1;
	 jj_gen = 0;
	 for (int i = 0; i < 57; i++) jj_la1[i] = -1;
	 for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Constructor. */
  public MyNewGrammar(java.io.Reader stream) {
	 if (jj_initialized_once) {
	   System.out.println("ERROR: Second call to constructor of static parser. ");
	   System.out.println("	   You must either use ReInit() or set the JavaCC option STATIC to false");
	   System.out.println("	   during parser generation.");
	   throw new Error();
	 }
	 jj_initialized_once = true;
	 jj_input_stream = new SimpleCharStream(stream, 1, 1);
	 token_source = new MyNewGrammarTokenManager(jj_input_stream);
	 token = new Token();
	 jj_ntk = -1;
	 jj_gen = 0;
	 for (int i = 0; i < 57; i++) jj_la1[i] = -1;
	 for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Reinitialise. */
  static public void ReInit(java.io.Reader stream) {
	if (jj_input_stream == null) {
	   jj_input_stream = new SimpleCharStream(stream, 1, 1);
	} else {
	   jj_input_stream.ReInit(stream, 1, 1);
	}
	if (token_source == null) {
 token_source = new MyNewGrammarTokenManager(jj_input_stream);
	}

	 token_source.ReInit(jj_input_stream);
	 token = new Token();
	 jj_ntk = -1;
	 jj_gen = 0;
	 for (int i = 0; i < 57; i++) jj_la1[i] = -1;
	 for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Constructor with generated Token Manager. */
  public MyNewGrammar(MyNewGrammarTokenManager tm) {
	 if (jj_initialized_once) {
	   System.out.println("ERROR: Second call to constructor of static parser. ");
	   System.out.println("	   You must either use ReInit() or set the JavaCC option STATIC to false");
	   System.out.println("	   during parser generation.");
	   throw new Error();
	 }
	 jj_initialized_once = true;
	 token_source = tm;
	 token = new Token();
	 jj_ntk = -1;
	 jj_gen = 0;
	 for (int i = 0; i < 57; i++) jj_la1[i] = -1;
	 for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Reinitialise. */
  public void ReInit(MyNewGrammarTokenManager tm) {
	 token_source = tm;
	 token = new Token();
	 jj_ntk = -1;
	 jj_gen = 0;
	 for (int i = 0; i < 57; i++) jj_la1[i] = -1;
	 for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  static private Token jj_consume_token(int kind) throws ParseException {
	 Token oldToken;
	 if ((oldToken = token).next != null) token = token.next;
	 else token = token.next = token_source.getNextToken();
	 jj_ntk = -1;
	 if (token.kind == kind) {
	   jj_gen++;
	   if (++jj_gc > 100) {
		 jj_gc = 0;
		 for (int i = 0; i < jj_2_rtns.length; i++) {
		   JJCalls c = jj_2_rtns[i];
		   while (c != null) {
			 if (c.gen < jj_gen) c.first = null;
			 c = c.next;
		   }
		 }
	   }
	   return token;
	 }
	 token = oldToken;
	 jj_kind = kind;
	 throw generateParseException();
  }

  @SuppressWarnings("serial")
  static private final class LookaheadSuccess extends java.lang.Error {
    @Override
    public Throwable fillInStackTrace() {
      return this;
    }
  }
  static private final LookaheadSuccess jj_ls = new LookaheadSuccess();
  static private boolean jj_scan_token(int kind) {
	 if (jj_scanpos == jj_lastpos) {
	   jj_la--;
	   if (jj_scanpos.next == null) {
		 jj_lastpos = jj_scanpos = jj_scanpos.next = token_source.getNextToken();
	   } else {
		 jj_lastpos = jj_scanpos = jj_scanpos.next;
	   }
	 } else {
	   jj_scanpos = jj_scanpos.next;
	 }
	 if (jj_rescan) {
	   int i = 0; Token tok = token;
	   while (tok != null && tok != jj_scanpos) { i++; tok = tok.next; }
	   if (tok != null) jj_add_error_token(kind, i);
	 }
	 if (jj_scanpos.kind != kind) return true;
	 if (jj_la == 0 && jj_scanpos == jj_lastpos) throw jj_ls;
	 return false;
  }


/** Get the next Token. */
  static final public Token getNextToken() {
	 if (token.next != null) token = token.next;
	 else token = token.next = token_source.getNextToken();
	 jj_ntk = -1;
	 jj_gen++;
	 return token;
  }

/** Get the specific Token. */
  static final public Token getToken(int index) {
	 Token t = token;
	 for (int i = 0; i < index; i++) {
	   if (t.next != null) t = t.next;
	   else t = t.next = token_source.getNextToken();
	 }
	 return t;
  }

  static private int jj_ntk_f() {
	 if ((jj_nt=token.next) == null)
	   return (jj_ntk = (token.next=token_source.getNextToken()).kind);
	 else
	   return (jj_ntk = jj_nt.kind);
  }

  static private java.util.List<int[]> jj_expentries = new java.util.ArrayList<int[]>();
  static private int[] jj_expentry;
  static private int jj_kind = -1;
  static private int[] jj_lasttokens = new int[100];
  static private int jj_endpos;

  static private void jj_add_error_token(int kind, int pos) {
	 if (pos >= 100) {
		return;
	 }

	 if (pos == jj_endpos + 1) {
	   jj_lasttokens[jj_endpos++] = kind;
	 } else if (jj_endpos != 0) {
	   jj_expentry = new int[jj_endpos];

	   for (int i = 0; i < jj_endpos; i++) {
		 jj_expentry[i] = jj_lasttokens[i];
	   }

	   for (int[] oldentry : jj_expentries) {
		 if (oldentry.length == jj_expentry.length) {
		   boolean isMatched = true;

		   for (int i = 0; i < jj_expentry.length; i++) {
			 if (oldentry[i] != jj_expentry[i]) {
			   isMatched = false;
			   break;
			 }

		   }
		   if (isMatched) {
			 jj_expentries.add(jj_expentry);
			 break;
		   }
		 }
	   }

	   if (pos != 0) {
		 jj_lasttokens[(jj_endpos = pos) - 1] = kind;
	   }
	 }
  }

  /** Generate ParseException. */
  static public ParseException generateParseException() {
	 jj_expentries.clear();
	 boolean[] la1tokens = new boolean[76];
	 if (jj_kind >= 0) {
	   la1tokens[jj_kind] = true;
	   jj_kind = -1;
	 }
	 for (int i = 0; i < 57; i++) {
	   if (jj_la1[i] == jj_gen) {
		 for (int j = 0; j < 32; j++) {
		   if ((jj_la1_0[i] & (1<<j)) != 0) {
			 la1tokens[j] = true;
		   }
		   if ((jj_la1_1[i] & (1<<j)) != 0) {
			 la1tokens[32+j] = true;
		   }
		   if ((jj_la1_2[i] & (1<<j)) != 0) {
			 la1tokens[64+j] = true;
		   }
		 }
	   }
	 }
	 for (int i = 0; i < 76; i++) {
	   if (la1tokens[i]) {
		 jj_expentry = new int[1];
		 jj_expentry[0] = i;
		 jj_expentries.add(jj_expentry);
	   }
	 }
	 jj_endpos = 0;
	 jj_rescan_token();
	 jj_add_error_token(0, 0);
	 int[][] exptokseq = new int[jj_expentries.size()][];
	 for (int i = 0; i < jj_expentries.size(); i++) {
	   exptokseq[i] = jj_expentries.get(i);
	 }
	 return new ParseException(token, exptokseq, tokenImage);
  }

  static private boolean trace_enabled;

/** Trace enabled. */
  static final public boolean trace_enabled() {
	 return trace_enabled;
  }

  /** Enable tracing. */
  static final public void enable_tracing() {
  }

  /** Disable tracing. */
  static final public void disable_tracing() {
  }

  static private void jj_rescan_token() {
	 jj_rescan = true;
	 for (int i = 0; i < 16; i++) {
	   try {
		 JJCalls p = jj_2_rtns[i];

		 do {
		   if (p.gen > jj_gen) {
			 jj_la = p.arg; jj_lastpos = jj_scanpos = p.first;
			 switch (i) {
			   case 0: jj_3_1(); break;
			   case 1: jj_3_2(); break;
			   case 2: jj_3_3(); break;
			   case 3: jj_3_4(); break;
			   case 4: jj_3_5(); break;
			   case 5: jj_3_6(); break;
			   case 6: jj_3_7(); break;
			   case 7: jj_3_8(); break;
			   case 8: jj_3_9(); break;
			   case 9: jj_3_10(); break;
			   case 10: jj_3_11(); break;
			   case 11: jj_3_12(); break;
			   case 12: jj_3_13(); break;
			   case 13: jj_3_14(); break;
			   case 14: jj_3_15(); break;
			   case 15: jj_3_16(); break;
			 }
		   }
		   p = p.next;
		 } while (p != null);

		 } catch(LookaheadSuccess ls) { }
	 }
	 jj_rescan = false;
  }

  static private void jj_save(int index, int xla) {
	 JJCalls p = jj_2_rtns[index];
	 while (p.gen > jj_gen) {
	   if (p.next == null) { p = p.next = new JJCalls(); break; }
	   p = p.next;
	 }

	 p.gen = jj_gen + xla - jj_la; 
	 p.first = token;
	 p.arg = xla;
  }

  static final class JJCalls {
	 int gen;
	 Token first;
	 int arg;
	 JJCalls next;
  }

}
